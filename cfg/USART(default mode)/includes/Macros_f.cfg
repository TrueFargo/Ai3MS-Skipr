
#########################################################
##########              MACRO               #############
#########################################################

#[gcode_macro M600]      #from JJdefault #M600 - Filament Change
# The M600 command initiates the filament change procedure. The basic procedure will move the print head away from the print,
# eject the filament, wait for new filament to be inserted and the user to confirm, load and prime the filament,
# and continue with the print. M600 may be initiated automatically if a filament runout sensor is installed.


## default_parameter_X: 50
## default_parameter_Y: 0
## default_parameter_Z: 10

#gcode:
    #{% set X = params.X|default(50)|float %}
    #{% set Y = params.Y|default(0)|float %}
    #{% set Z = params.Z|default(10)|float %}
    #SAVE_GCODE_STATE NAME=M600_state
    #PAUSE
    #G91
    #G1 E-.8 F2700
    #G1 Z{Z}
    #G90
    #G1 X{X} Y{Y} F3000
    #G91
    #G1 E-150 F1000
    #M300 S299 P200
    #M300 S299 P200
    #M300 S299 P200
    #M300 S299 P200
    #M300 S299 P200
    #RESTORE_GCODE_STATE NAME=M600_state

## Filament Switch Sensor.  Support for filament insert and runout detection
## using a switch sensor, such as an endstop switch.
#[filament_switch_sensor filament_sensor] #bistory
#pause_on_runout: True
##   When set to True, a PAUSE will execute immediately after a runout
##   is detected. Note that if pause_on_runout is False and the
##   runout_gcode is omitted then runout detection is disabled. Default
##   is True.
#runout_gcode:
#    M118 Filament Runout Detected
##   A list of G-Code commands to execute after a filament runout is
##   detected. See docs/Command_Templates.md for G-Code format. If
##   pause_on_runout is set to True this G-Code will run after the
##   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#    M118 Filament Load Detected
##   A list of G-Code commands to execute after a filament insert is
##   detected. See docs/Command_Templates.md for G-Code format. The
##   default is not to run any G-Code commands, which disables insert
##   detection.
##event_delay: 3.0
##   The minimum amount of time in seconds to delay between events.
##   Events triggered during this time period will be silently
##   ignored. The default is 3 seconds.
##pause_delay: 0.5
##   The amount of time to delay, in seconds, between the pause command
##   dispatch and execution of the runout_gcode.  It may be useful to
##   increase this delay if Octoprint exhibits strange pause behavior.
##   Default is 0.5 seconds.
#switch_pin: ^!PD2
##   The pin on which the switch is connected. This parameter must be
##   provided.

[gcode_macro Nozzle_Change]   
gcode:  
  G28
  G1 X100 Z110 F300
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
description: Setup for nozzle change

[gcode_macro Heat_Hotend]        #from JJdefault & JJskr3
gcode:  
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
description: Preheat nozzle

[gcode_macro m205]
gcode:
[gcode_macro m300]
gcode:
[gcode_macro M240]
gcode:
  DSLRSHOT
[gcode_macro bltouch_reset]
gcode:
  BLTOUCH_DEBUG COMMAND=reset
[gcode_macro bltouch_touchmode]
gcode:
  BLTOUCH_DEBUG COMMAND=touch_mode

[gcode_macro bltouch_probe]
gcode:
  QUERY_PROBE

[gcode_macro bltouch_up]
gcode:
  BLTOUCH_DEBUG COMMAND=pin_up



[gcode_macro bltouch_pindown]
gcode:
  BLTOUCH_DEBUG COMMAND=pin_down



[gcode_macro PAUSE] #from JJdefault & JJskr3
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000


[gcode_macro RESUME]    #from JJdefault & JJskr3
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME
  
  
  
[gcode_macro CANCEL_PRINT]          #from JJdefault & JJskr3
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  G91		            #relative positioning
  # G1 E-.1 
  G10                   #retract
  G1 Z10 Y50 F1000	    #Z axis up 10mm, Y out 50mm
  G90		            #absolute positioning
  G28 X0 	            #home X axis
  M84                   #steppers off
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT



[gcode_macro bedLoadMove]
gcode:
  G28 X Y
  G28 Z
  BED_MESH_PROFILE LOAD=default
  RESPOND TYPE=command MSG='mesh loaded'
  M114
  RESPOND TYPE=command MSG='go to xy zeros'
  G28 X Y
  G0 Z0.15
  M114
  RESPOND TYPE=command MSG='line 120mm'
  G0 X120 Y0 Z0



  

#########################################################
##########            TIMELAPSE             #############       #from JJdefault & JJskr3 dslr
#########################################################


# [gcode_macro _TIMELAPSE_NEW_FRAME] 
# gcode:
#  RUN_SHELL_COMMAND CMD=DSLR_trigger
#  {action_call_remote_method("timelapse_newframe")}
#  # leave this in a separate macro!
#  
#  
# [gcode_macro TIMELAPSE_TAKE_FRAME]
# gcode:
#   # G10
#   # SAVE_GCODE_STATE NAME=SNAPSHOT
#   # G1 X175.0 F10000
#   # G1 Y100.0 F10000
#   # G4 P500 ;dwell
#   # M400    ;clear buffer
#   _TIMELAPSE_NEW_FRAME
#   # G4 P500 ;moar dwelling
#   # M400
#   # RESTORE_GCODE_STATE NAME=SNAPSHOT MOVE=1
#   # G11
#   
# [gcode_macro TIMELAPSE_RENDER]
# gcode:
#   {action_call_remote_method("timelapse_render")}
# 
# [gcode_shell_command DSLR_trigger]
# command: gphoto2 --trigger-capture    #--trigger-capture doesn't wait for response
# timeout: 2.
# verbose: False
# 
# 
# [gcode_macro GPHOTO_TAKE_FRAME]
# gcode:
#     RUN_SHELL_COMMAND CMD=DSLR_trigger
#
